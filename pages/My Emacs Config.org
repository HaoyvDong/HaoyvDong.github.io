#+PROPERTY: header-args:emacs-lisp :results silent :tangle "~/.emacs.d/init.el"
* early-init
#+begin_src  emacs-lisp :tangle "~/.emacs.d/early-init.el"
  ;;; early-init.el --- Early initialization. -*- lexical-binding: t -*-
  
  ;; Faster to disable these here (before they've been initialized)
  (push '(menu-bar-lines . 0) default-frame-alist)
  (push '(tool-bar-lines . 0) default-frame-alist)
  (push '(vertical-scroll-bars) default-frame-alist)
  (push '(fullscreen . maximized) default-frame-alist)
  
  ;; (setq-default mode-line-format nil)
  
  
  (provide 'early-init)
  
  ;;; early-init.el ends here
  
#+end_src
* Init.el

#+begin_src emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(initial-buffer-choice 'eshell)
 '(make-backup-files nil)
 '(package-archives
   '(("gnu" . "https://elpa.gnu.org/packages/")
     ("nongnu" . "https://elpa.nongnu.org/nongnu/")
     ("melpa" . "https://melpa.org/packages/")))
 '(package-selected-packages
   '(auto-dark treemacs-magit use-package dired-sidebar conda denote marginalia beancount treemacs markdown-mode org orderless magit which-key vertico)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Sarasa Term Slab SC" :foundry "outline" :slant normal :weight regular :height 161 :width normal)))))

(server-mode t)
(desktop-save-mode 1)

#+end_src

** localization
#+begin_src emacs-lisp
  (prefer-coding-system 'utf-8)          ; pretty
  (setq selection-coding-system 'utf-8)  ; pretty
  (setq locale-coding-system 'utf-8)     ; please
  (setq file-name-coding-system 'chinese-gb18030)
  (set-clipboard-coding-system 'chinese-gb18030)
    
  (setq system-time-locale "C")
  (format-time-string "%Y-%m-%d")
  
#+end_src

** use-package
#+begin_src emacs-lisp
(require 'use-package)
#+end_src

*** vertico orderless marginalia which-key
#+begin_src emacs-lisp
(use-package vertico
  :ensure t
  :hook (after-init . vertico-mode))
(use-package savehist
  :hook (vertico-mode . savehist-mode))
(use-package orderless
  :ensure t
  :custom
  (completion-styles '(orderless basic))
  (completion-category-defaults nil)
  (completion-category-overrides '((file (styles partial-completion)))))
(use-package marginalia
  :ensure t
  :bind (:map minibuffer-local-map
         ("M-A" . marginalia-cycle))
  :hook (vertico-mode . marginalia-mode))
(use-package which-key
  :ensure t
  :hook (after-init . which-key-mode))
#+end_src
*** treemacs
#+begin_src emacs-lisp
(use-package treemacs
  :ensure t
  :defer t
  :init
  (with-eval-after-load 'winum
    (define-key winum-keymap (kbd "M-0") #'treemacs-select-window))
  :config
  (progn
    (setq treemacs-collapse-dirs                   (if treemacs-python-executable 3 0)
          treemacs-deferred-git-apply-delay        0.5
          treemacs-directory-name-transformer      #'identity
          treemacs-display-in-side-window          t
          treemacs-eldoc-display                   'simple
          treemacs-file-event-delay                2000
          treemacs-file-extension-regex            treemacs-last-period-regex-value
          treemacs-file-follow-delay               0.2
          treemacs-file-name-transformer           #'identity
          treemacs-follow-after-init               t
          treemacs-expand-after-init               t
          treemacs-find-workspace-method           'find-for-file-or-pick-first
          treemacs-git-command-pipe                ""
          treemacs-goto-tag-strategy               'refetch-index
          treemacs-header-scroll-indicators        '(nil . "^^^^^^")
          treemacs-hide-dot-git-directory          t
          treemacs-indentation                     2
          treemacs-indentation-string              " "
          treemacs-is-never-other-window           nil
          treemacs-max-git-entries                 5000
          treemacs-missing-project-action          'ask
          treemacs-move-files-by-mouse-dragging    t
          treemacs-move-forward-on-expand          nil
          treemacs-no-png-images                   nil
          treemacs-no-delete-other-windows         t
          treemacs-project-follow-cleanup          nil
          treemacs-persist-file                    (expand-file-name ".cache/treemacs-persist" user-emacs-directory)
          treemacs-position                        'left
          treemacs-read-string-input               'from-child-frame
          treemacs-recenter-distance               0.1
          treemacs-recenter-after-file-follow      nil
          treemacs-recenter-after-tag-follow       nil
          treemacs-recenter-after-project-jump     'always
          treemacs-recenter-after-project-expand   'on-distance
          treemacs-litter-directories              '("/node_modules" "/.venv" "/.cask")
          treemacs-project-follow-into-home        nil
          treemacs-show-cursor                     nil
          treemacs-show-hidden-files               t
          treemacs-silent-filewatch                nil
          treemacs-silent-refresh                  nil
          treemacs-sorting                         'alphabetic-asc
          treemacs-select-when-already-in-treemacs 'move-back
          treemacs-space-between-root-nodes        t
          treemacs-tag-follow-cleanup              t
          treemacs-tag-follow-delay                1.5
          treemacs-text-scale                      nil
          treemacs-user-mode-line-format           nil
          treemacs-user-header-line-format         nil
          treemacs-wide-toggle-width               70
          treemacs-width                           35
          treemacs-width-increment                 1
          treemacs-width-is-initially-locked       t
          treemacs-workspace-switch-cleanup        nil)

    ;; The default width and height of the icons is 22 pixels. If you are
    ;; using a Hi-DPI display, uncomment this to double the icon size.
    (treemacs-resize-icons 33)

    (treemacs-follow-mode t)
    (treemacs-filewatch-mode t)
    (treemacs-fringe-indicator-mode 'always)
    (when treemacs-python-executable
      (treemacs-git-commit-diff-mode t))

    (pcase (cons (not (null (executable-find "git")))
                 (not (null treemacs-python-executable)))
      (`(t . t)
       (treemacs-git-mode 'deferred))
      (`(t . _)
       (treemacs-git-mode 'simple)))

    (treemacs-hide-gitignored-files-mode nil))
  :bind
  (:map global-map
        ("M-0"       . treemacs-select-window)
        ("C-x t 1"   . treemacs-delete-other-windows)
        ("C-x t t"   . treemacs)
        ("C-x t d"   . treemacs-select-directory)
        ("C-x t B"   . treemacs-bookmark)
        ("C-x t C-t" . treemacs-find-file)
        ("C-x t M-t" . treemacs-find-tag)))

(use-package treemacs-magit
  :after (treemacs magit)
  :ensure t)

(treemacs-start-on-boot)
#+end_src
*** Org-Mode
#+begin_src emacs-lisp
(use-package org
  :pin melpa
  :ensure t
  :custom
  (org-agenda-files "c:/Users/Randir/configBackup/org/")
  (org-directory "c:/Users/Randir/configBackup/org"))

(global-display-line-numbers-mode t)
(setq display-line-numbers-type 'relative)

(keymap-global-set "<f10>" #'tmm-menubar)
(advice-add #'tmm-add-prompt :after #'minibuffer-hide-completions)
#+end_src
*** conda beancount
#+begin_src emacs-lisp
(use-package conda
  :ensure t
  :custom
  (conda-anaconda-home "d:/Applications/Scoop/apps/miniconda3/current/"))
  
(use-package beancount
  :after conda
  :hook
  (beancount-mode . (lambda ()  
     (outline-minor-mode t)
     (conda-env-activate "bean") ; 激活conda环境
     (beancount-fava)  
     )))
*** themes
#+begin_src emacs-lisp
(use-package auto-dark
  :ensure t
  :custom
  (auto-dark-themes '((modus-vivendi) (modus-oprendi)))
  :init (auto-dark-mode))
(define-key global-map (kbd "<f5>") #'modus-themes-toggle)

#+end_src
