#+Description: 被你发现了！你看确实没写什么东西，话说如果以记录知识的角度，网上最多的“迁移到 Hugo”真的有反复写的必要吗？不如把搜过的教程链接搜集下完事。所以你可以点击 #Article 查看我的剪藏库！

* ~ROBOCOPY  /MIR~ 命令系统权限解决
:PROPERTIES:
:heading: true
:collapsed: true
:END:
** ~ROBOCOPY /MIR~ 会字面意义上地“镜像”一份文件，所以使用这个命令直接将整个盘符复制到某个文件夹下并且没有提前创建那个文件夹的时候，就会找不到那个文件夹：
- ls 命令不会列出
- 文件管理器无法查看
- 只能通过直接在地址栏输入路径访问
** 访问后内部文件是可以正常移动出来的，然后使用管理员权限强制删除就好： ~sudo Remove-Item -Force -Recurse~
* #Emacs Org-Mode 列编辑
:PROPERTIES:
:heading: true
:collapsed: true
:END:
来自 ChatGPT 3.5
** GPT 的回复
*** In Emacs org-mode, you can edit the same column in multiple lines using the rectangular selection feature. Here's how you can do it:

1. Move the cursor to the beginning of the column you want to edit.
2. Press ~C-SPC~ (~Ctrl~ + ~Space~) to set the mark at the current cursor position.
3. Move the cursor to the end of the column you want to edit. You can use the arrow keys or any other movement commands.
4. Now you have a rectangular region selected. You can see it visually as a highlighted rectangle.
5. Perform the editing operation you want. You can type, delete, or replace text as usual.
6. Press ~C-g~ (~Ctrl~ + ~g~) to deactivate the rectangular region selection.
*** Alternatively, you can use the rectangle commands in Emacs. Here are the steps:

1. Move the cursor to one corner of the rectangle you want to edit.
2. Press ~C-SPC~ (~Ctrl~ + ~Space~) to set the mark at the current cursor position.
3. Move the cursor to the opposite corner of the rectangle. This will highlight the rectangle.
4. Use one of the following commands to perform the editing operation you want:
   - ~C-x r k~: Kill (delete) the text in the rectangle.
   - ~C-x r d~: Delete the text in the rectangle, but don't kill it (can be yanked later).
   - ~C-x r y~: Yank (paste) the text from the rectangle.
   - ~C-x r t~: Replace the text in the rectangle with a string you type.
   - ~C-x r o~: Open a blank rectangle, shifting text to the right.
   - ~C-x r c~: Clear (blank out) the rectangle.
5. Press ~C-g~ (~Ctrl~ + ~g~) to deactivate the rectangle editing mode.

Using these techniques, you can easily edit the same column in multiple lines in Emacs org-mode.
* #Excel 功能键
:PROPERTIES:
:heading: true
:collapsed: true
:END:
来自询问文心一言的结果。
** Function Key（F1、F2等）的常见通用功能包括：

1. F1：通常用于获取帮助。在Excel中，它可以调出帮助文档，搜索特定的函数或命令的使用方法。
2. F2：单独按下F2键可以编辑单元格内容，相当于双击单元格。Shift+F2可以编辑批注。在选中文件时，按F2可以为文件重命名。
3. F3：无特殊通用功能。
4. F4：在公式/函数中用于绝对引用、混合引用、相对引用的切换。还可以重复上一个操作，例如插入一个空行后，按下F4，可以重复插入空行。
5. F5：调出定位对话框。例如选中区域后，利用定位中的“空值”，可以批量选中空单元格。
6. F6：在工作表功能区、任务窗格和缩放控件之间切换。如果打开多个工作簿窗口，按Ctrl+F6可切换至下一工作簿窗口。
7. F7：显示“拼写检查”对话框。若工作簿窗口未最大化，按Ctrl+F7可对该窗口执行“移动”命令。
8. F8：打开关闭拓展模式，按一下F8相当于长按Shift选中区域。按一次Shift+F8，相当于长按Ctrl键，可同时选中不连续区域。当工作簿未最大化时，按住Ctrl+F8可执行“拉伸大小”命令。
9. F9：单独按F9可让所有工作簿中的公式重新计算/刷新一次。Shift+F9为计算活动工作表。
10. F10：Shift+F10显示选定项目的快捷菜单；Ctrl+F10最大化或还原工作簿窗口。
11. F11：单按F11创建图表；Shift+F11插入一个新的工作表；Alt+F11打开Microsoft Visual Basic编辑器。
** 这些功能在很多应用程序中都存在，但具体的功能可能因程序的不同而有所差异。至于是否遵循较早的规定，这可能因不同的操作系统和应用程序而有所不同。对于具体的规定和历史背景，建议查阅相关的技术文档或历史资料。
** 不同 Sheet 间切换： ~Ctrl+PgUp/Pgdn~
* #Excel 序号
:PROPERTIES:
:heading: true
:collapsed: true
:END:
[[https://sspai.com/post/54615][Excel 中标记序号的技巧 - 少数派]]
** 静态序号
:PROPERTIES:
:heading: true
:END:
*** Ctrl 改变 Excel 中自动填充的行为：
- 输入 1 ，按 Ctrl 右下角下拉，递增序号
- 输入 1 2，按 Ctrl 右下角下拉，重复 1 2
*** 「开始 - 编辑 - 填充 - 系列」
- 等差、等比数列、日期
- 起始终止值
*** 合并单元格后填充序号
1. ~= MAX($A$2:A2)+1~
2. ~Crl+Enter~ 自动填充
*** 自定义序列
对于 Excel 2010 或更高版本，「文件 - 选项 - 高级 - 常规 - 编辑自定义序列」
** 动态序号
:PROPERTIES:
:heading: true
:END:
*** ~ROW() ~
返回单元格所在行标
*** 表中表
#+BEGIN_QUOTE
在 Excel 中创建了表中表后，这块表格区域在新增行时，会自动在新的一行中，保留上下行中的公式。
#+END_QUOTE
*** ~AGGREGATE()~
#+BEGIN_QUOTE
它是 Excel 所有函数中，少数几个可以仅对当前没有被隐藏的数据进行运算的函数。
#+END_QUOTE
* #Emacs 中的项目文件管理
:PROPERTIES:
:heading: true
:collapsed: true
:END:
或，如何实现/替代侧边栏文件管理
** 吐槽
从“现代”软件使用过来的哑炮，在 Emacs 里总是会怀念侧边栏文件管理器的方便。不过一直没有认真考虑解决方案，毕竟操作纯文本还没有那么多嘛。不过看到这篇[[https://emacs-china.org/t/emacs/22306/][讨论]]还是激起了继续折腾的好奇心，总之先码住作为备选学习话题好了。
** 参考资料：
1. [[https://emacs-china.org/t/emacs/22306][Emacs 风格的文件操作和项目文件管理是啥样的？ - Emacs-general - Emacs China]]
* 易微联WI-FI遥控器设置指南
:PROPERTIES:
:heading: true
:collapsed: true
:END:
** 设置流程
:PROPERTIES:
:END:
*** 重置
:PROPERTIES:
:END:
插电后长按正面指示灯上方指示标记处，直到指示灯进入两闪烁一长亮状态，即为待连接状态。
*** 连接
:PROPERTIES:
:END:
手机安装注册好易微联 APP 后，确认已连接至希望遥控器接入的 2.4G 网络。首页打开“快速连接”→“单个设备”，等待发现连接设备即可。
*** 学习遥控器
:PROPERTIES:
:END:
进入遥控器设置界面，右下角“添加”、选择对应按键数的遥控器，易微联设备一次“嘀”声后，长按原遥控器上按键，易微联设备连响“嘀”声即为学习成功。后续学习按键，先在手机上长按需学习的按键，“嘀”声后长按遥控器按键学习，成功后设备连响“嘀”声。
** 注意事项
:PROPERTIES:
:END:
*** 网络要求
:PROPERTIES:
:END:
必须使用 2.4G 网络，不能使用 5G、双频合一网络。
*** 连接失败
:PROPERTIES:
:id: 连接失败
:END:
重置连接时即使正确完成所有操作，也可能出现多次连接失败，需重复尝试。
*** 卷帘门控制器视频教程：
https://cloud.video.taobao.com//play/u/2998787772/p/1/e/6/t/1/228442902306.mp4
*** 拷贝器学习遥控器按键：
https://cloud.video.taobao.com//play/u/2998787772/p/1/e/6/t/1/294032869022.mp4
* #Excel 合并单元格
:PROPERTIES:
:heading: true
:collapsed: true
:END:
#Article [[https://sspai.com/post/53098][玩转 Excel 中的合并单元格 - 少数派]]
** 行单元格 标题居中
右键选中区域，选择「设置单元格格式」，进入到「对齐」选项卡，将「水平对齐方式」设置为「跨列居中」
| 方法 | 在现有表格内插入列 | 在现有表格后插入列 |
|----+----+----|
| 合并单元格 | 自动居中对齐 | 需要手动取消合并，重新选定区域合并单元格 |
| 使用跨列居中对齐 | 自动居中对齐 | 自动居中对齐 |
** 列单元格 取消合并 补全空白值
- 场景：VLookup 查找内容
- 操作
  1. 第一步：选中整个 A 列，在工具栏中取消合并单元格；
  2. 第二步：点击 Excel 菜单中的「编辑 - 查找 - 转到…」（可以通过 Ctrl + G 快捷键调出），找到这个定位功能，并在左下角进入「定位条件…」。在选中 A 列的情况下，定位「空值」。可以看到，空白处如 A3:A6、A8:A10、A16:A19 等区域，就被批量选中了；
  3. 第三步：保持空白单元格的选中状态，在首个单元格中输入 =A2，并使用 Ctrl+Enter 批量填充，就完成了空白值补全；
** 分类汇总 合并单元格
- 原理：Excel 在合并单元格时，默认都是会只保留左上角单元格的值，而清空其它剩下的单元格，只有一种情况存在例外：当使用格式刷来创建合并单元格时，所有原始数据都会被保留下来。
- 操作：
  1. 在「数据」选项卡中，打开「分类汇总」，选定汇总项
  2. 利用空白值定位法（~Ctrl+G~），合并空白格
  3. 全选表格删除分类汇总
  4. 格式刷将合并列格式应用到明细列
* 如何批注
:PROPERTIES:
:heading: true
:collapsed: true
:END:
我是个不记笔记的人——每次开始边批注边读都会停留在第一章。以前也并不觉得有什么改正的必要，不过随着关注领域日多，也终于不能完全靠全文剪藏、或者仅收集链接每次都重新打开了。
** [[https://utgd.net/article/20107][一种低技术的阅读批注思路 - #UNTAG]]
通用标注体系 #Article
*** 基础标记如何分类？
- 高亮线：主语，关键词；
- 下划线：谓语，理论；
- 波浪线：宾语，案例。
*** 多数内容应及时整理
#+BEGIN_QUOTE
需要强调与亟待处理之处，则尽可能融入任务管理工具（即便只是抄到便签上），总之不将后续需要整理的段落留在原始文件中。
#+END_QUOTE
*** 纸质书与电子书的批注交互——下划线边缘标注
#+BEGIN_QUOTE
《会读才会写》编制了一套阅读密码缩写，我却只标上颜色的首字母，以期削薄标注记号的语义，不关心所划线段落是事实、理论还是批驳，只管随后将使用哪种颜色标注之。盖从黑白两色的纸笔标注转换为多彩的电子标注，此步骤纯属苦工，易出疏漏，不宜再掺入关于语义的思考，只需遇“O”画橙黄高亮，见“B”画蓝线，如此而已。
#+END_QUOTE
*** 标签管理——避免常见词
#+BEGIN_QUOTE
之所以选取 *FCT* 这等晦涩拼写，并非给自己没事找事，而是为与原文区分，不得已选用英文中几不可能出现的拼写组合。又如 *VPT* 表示观点（View Point），*QST* 代表诘问（Question），不一而足。既已动用文字标注，则不必拘泥于描述高亮文本的属性，更可以指出后续处理方式，例如（1）作为论据，加入现有笔记；（2）作为联想基点，启发新的笔记；（3）难以理解，需要另外查询资料……如此，当时究竟为何划下这些句子，便了然于胸，回顾工作，也不再是自我安慰。
#+END_QUOTE
** [[https://sspai.com/prime/story/54211][Power+ 读书周：我们读书时会用到的辅助工具和技巧 ｜ 少数派会员  π+Prime]]
#Article 这里摘录的作者事实上就是上文 UNTAG 的 Minja 和 沨沄极客。
*** 三点输出法
#+BEGIN_QUOTE
写书评本身也有一些方法论，我比较推荐「三点输出法」，即挑三点最令人印象深刻的记下来，减轻记录压力的同时也要求阅读者惜墨如金，主动挑选精华。很多书掺着车轱辘话，读起来头头是道——比如《精要主义》前几章，大家一看书名就懂——一旦遇到三点输出的过滤网，就统统被拦在外面。

很多麦肯锡派的畅销书都提到过三点输出的方法，《为什么精英都是时间控》的作者身为脑科医生也提倡过。当然和前一节的 4 色批注一样，「三点」也是不是硬性标准，如果真有很多好内容，多摘一点又有何妨。
#+END_QUOTE
*** 四色批注
考虑到标准比较多，我最后用的批注方案非常直白：通过 4 种颜色来勾出 4 类重点信息。
- 蓝色：本书理论； 
- 橙色：经典案例； 
- 红色：关键词、专有名词； 
- 紫色：对我有特殊意义的内容。
* 自制电子书
:PROPERTIES:
:heading: true
:collapsed: true
:END:
** 起因很简单嘛，网文下载下来不排版根本不能看（不会真的有人把一切交给阅读器吧——Kybook 系列停更痛感）。后来网文看得少了，还没有正确上网姿势的时候从公众号资源站下载一些电子书也往往排版粗劣，复杂的图文混排、来回跳转或悬浮窗的脚注且不提，许多书甚至连目录和行距段距都做不好！就算我不要那象牙箸，也不能给我双全是毛刺的吧？
** #CSS 集锦
:PROPERTIES:
:heading: true
:END:
*** Worg CSS
https://orgmode.org/worg/style/worg.css
*** 少数派经典 CSS
https://cdn.sspai.com/minja/sspai.css.zip
*** Markdown.css
CSS to make HTML markup look like plain-text markdown.
https://mrcoles.com/demo/markdown-css/
*** 赫蹏
[[https://github.com/sivan/heti][sivan/heti: 赫蹏（hètí）是专为中文内容展示设计的排版样式增强。它基于通行的中文排版规范而来，可以为网站的读者带来更好的文章阅读体验。]]
** #Article
*** [[https://sspai.com/post/75170][一日一技 | 如何给自制电子书添加脚注 - 少数派]]
- 正则中的tab： ~\t~
**** 正则表达式的 PCRE 写法是指？
Perl Compatible Regular Expressions
***** Perl Python #Emacs RegEx
#Article: [[https://www.johndcook.com/blog/regex-perl-python-emacs/][Comparing regular expressions in Perl, Python, and Emacs]]
**** HTML Tag
* 作为阅读批注软件的 Zotero
:PROPERTIES:
:id: 64f1aacc-849d-4f99-acda-fc1512312067
:heading: true
:collapsed: true
:END:
** 自 6.0 的 PDF 阅读器支持以及将至的 7.0[fn:1] 的 EPUB/Webpage 批注[fn:2]，  Zotero 已经真正成为一款可以取代 MarginNote, LiquidText 等软件的阅读批注软件，而在 Zotero Metadata Importer[fn:3] 加持下与 Calibre 联动，书籍的元数据管理是完全不用操心的了。
当然，要想真正用好还是免不了一番折腾，例如针对知网豆瓣等书籍信息来源的 Translator、批注完成后的整理导出，需要用到各种插件，我就放到 #PKM 这一页的资源里了。 

[fn:1] [[https://forums.zotero.org/discussion/105094/announcing-the-zotero-7-beta][Announcing the Zotero 7 Beta - Zotero Forums]]
[fn:2] [[https://forums.zotero.org/discussion/106716/available-for-beta-testing-updated-reader-with-epub-snapshot-support-and-new-annotation-types/p1][Available for beta testing: Updated reader with EPUB/snapshot support and new annotation types - Zotero Forums]]
[fn:3] [[https://www.mobileread.com/forums/showthread.php?p=3339191][[GUI Plugin] Zotero Metadata Importer - MobileRead Forums]]
* #AHK 发送按键
:PROPERTIES:
:heading: true
:collapsed: true
:END:
** #Manual [[https://wyagd001.github.io/v2/docs/index.htm][快速参考 | AutoHotkey v2]]
** 基本语法速览
#+BEGIN_SRC Autohotkey
#z::	; Win+Z
{
	Loop 1	;循环次数
		{
			Send "{LButton}"	; 点击
			Sleep 300	; 睡眠 300 毫秒
			Send "{Shift down}{Tab}{Shift up}"	; 聚焦导航
			Send "{Enter}"	; 确认按钮
			Send "{Down}"	; 下拉菜单
		}
}
#+END_SRC
** 思路：网页和“正常”的窗口应该都能通过 Tab 切换聚焦的控件，结合 Enter 确认操作，方向键处理下拉菜单，多数需要重复操作的网页这样应该都能用。
** 案例： 300000 条数据，最大只能 30 条每页，需要挨个这样点点点审核
* 静态站托管记录
:PROPERTIES:
:heading: true
:collapsed: true
:END:
老实说一开始是拒绝任何 #Git 相关的方案的，就是懒嘛，结果后来还是不得不学了下。
** 废案
*** Netlify
刚注册就风控，也不知道是不是落地机房问题，想上传 ID 做认证都不行，Stripe 的网页不管什么姿势都卡死，走了人工申诉天晓得还要多长时间。
*** 热铁盒 https://host.retiehe.com/
想着国内站快点，也是支持直接上传文件。结果 Logseq 导出的页面“存在调用不符合核心价值观的 AI 算法的行为”，这下简中特了。
** 记录
*** #Article
- [[https://zhuanlan.zhihu.com/p/138305054][初次使用git上传代码到github远程仓库 - 知乎]]
- [[https://zhuanlan.zhihu.com/p/467192292][简悦 + Logseq + Github Page 无代码全自动化知识管理发布方案 - 知乎]]，文中介绍的 Action 已经停更了，可以用官方的 
 [https://github.com/logseq/publish-spa][logseq/publish-spa]]
*** 过程中的新知：
- SSH Key：[[https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5][Git - 生成 SSH 公钥]]
*** Magit, 用过都说好！ #Emacs
* 吐槽简悦
:PROPERTIES:
:collapsed: true
:END:
** 想添加白名单时
*** 文档中：
- "支持minimatch"，点过去看看，好，不会
- "支持正则"，噫，好！定睛一看：e.g.  =[[/https:\\/\\/movie.douban.com\\/subject\\/\\d+\\/?/]]= ，我就寻思上了：这个不熟啊🤔是我习惯的写法吗🤔
*** 没办法，只能再去“反馈快、态度好”的issue区文档搜一搜，果然有的嘛， =#1652= 就有老哥跟我一样嘛！kenshin："可以看看文档中正则表达式的内容哟～白名单的文档确实不够详细，谢谢提示～"白名单的文档并不会提示你去看正则表达式姑且不谈，进一步浏览可以发现 =#2539= 提到："正则表达式文档中的示例是错的......亏我那么相信官方文档......"该问题随后被纳入 =#2268= 文档修订专区。
*** issue区的经历看似没有问题，可是 =#1652= 发生于2021年1月2日、 =#2539=来自2021年7月16日、而 =#2268= 中的错误事实上只在2021年7月7日和8日得到了批量修正，kenshin本人倒是在2022年5月又增加了一条。也就是说至少到20230110为止这两年间，所有想要自己写正则的用户，要么错乱在无法生效的文档，要么又得走一遭 Github Issue。